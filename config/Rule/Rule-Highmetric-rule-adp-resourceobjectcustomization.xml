<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Highmetric-Rule-ADP-ResourceObjectCustomization" type="ResourceObjectCustomization">
  <Description>This rule is configured on the application and is called after the connector has build a ResourceObject from the native application data. Initially designed for non-rule based connectors to add SPPrivileged flag to an object, but could be used to do any transformations.</Description>
  <Signature returnType="ResourceObject">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="object">
        <Description>
          The ResourceObject built by the connector.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>
          Application that references the connector.
        </Description>
      </Argument>
      <Argument name="connector">
        <Description>
          The connector object.
        </Description>
      </Argument>
      <Argument name="state">
        <Description>
          A Map containing state information.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="resourceObject">
        <Description>
          The updated resource object.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source><![CDATA[
 
  if(null !=object.get("firstname") && null !=object.get("lastname") )
  
  {
  
  String fName = (String)object.get("firstname");
  String lName = (String)object.get("lastname");
  String status = object.getAttribute("status");
  

  
  String username = (fName.charAt(0)+""+lName).toLowerCase();
  
  object.put("username",username);
  
  if (null != status && status.equalsIgnoreCase("Active")) 
  {
  object.setAttribute("IIQDisabled", false); 
      
  }else{
     object.setAttribute("IIQDisabled", true);
  }

  }
  
  /*
  // calculete the Manager value
  
  if(null != object.getAttribute("manager")) {

  String managerName = (String)object.getAttribute("manager");
  
  String []  splltManager=managerName.split(" ");
  
 String managerAttr  = (splltManager[0].charAt(0)+""+splltManager[1]).toLowerCase();
  
    object.put("manager",managerAttr);
  
     
}
  */
   
  return object;]]></Source>
</Rule>
